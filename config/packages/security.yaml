security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            user_checker: App\Security\UserChecker
            security: false
        main:
            pattern: ^/
            user_checker: App\Security\UserChecker
            anonymous: true
            logout_on_user_change: true
            provider: app_user_provider
            form_login:
                login_path: user_login
                check_path: user_login
            logout:
                    path: user_logout
                    target: user_login
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                token_provider: 'Symfony\Bridge\Doctrine\Security\RememberMe\DoctrineTokenProvider'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
          - { path: ^/register, roles: ROLE_ADMIN }
          - { path: ^/site, roles: ROLE_ADMIN }
          - { path: ^/city, roles: ROLE_ADMIN }
          - { path: ^/listeUser, roles: ROLE_ADMIN }
          - { path: ^/Desactiver, roles: ROLE_ADMIN }
          - { path: ^/Activer, roles: ROLE_ADMIN }
          - { path: ^/Supprimer, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
